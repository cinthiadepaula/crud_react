{"version":3,"sources":["assets/imgs/logotipo.png","components/template/Header.jsx","components/template/Main.jsx","components/home/Home.jsx","components/user/UserCrud.jsx","main/Routes.jsx","components/template/Logo.jsx","components/template/Footer.jsx","components/template/Nav.jsx","main/App.jsx","serviceWorker.js","index.js"],"names":["module","exports","props","className","icon","title","subtitle","Fragment","children","headerProps","baseUrl","initialState","user","name","email","list","UserCrud","state","axios","then","resp","setState","data","this","method","id","url","getUpdateList","add","filter","u","unshift","event","target","value","type","onChange","e","updateField","placeholder","onClick","save","clear","delete","renderRow","map","key","load","remove","renderForm","renderTable","Component","exact","path","component","Home","from","to","src","logo","alt","Routes","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a20f1416.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logotipo.26254cdb.png\";","import './Header.css'\r\nimport React from 'react'\r\n\r\nexport default props =>\r\n<header className=\"header d-none d-sm-flex flex-column\">\r\n    <h1 className=\"mt-3\">\r\n    <i className={`fa fa-${props.icon}`} ></i> {props.title}\r\n\r\n    </h1>\r\n    <p className=\"lead text-muted\">{props.subtitle}</p>\r\n</header>","import './Main.css'\r\nimport React from 'react'\r\n\r\nimport './Header'\r\nimport Header from './Header'\r\n\r\nexport default props =>\r\n<React.Fragment>\r\n    <Header {...props} />\r\n    <main className=\"content container-fluid\">\r\n        <div className=\"p-3 mt-3\">\r\n            {props.children}\r\n        </div>\r\n    </main>\r\n</React.Fragment>","import React from \"react\";\r\nimport Main from \"../template/Main\";\r\n\r\nexport default (props) => (\r\n  <Main icon=\"home\" title=\"Início\" subtitle=\"Segundo Projeto\">\r\n    <div className=\"display-4\">Bem Vindo!</div>\r\n    <hr />\r\n    <p className=\"mb-0\">Sistema de Cadastro desenvolvido em React</p>\r\n  </Main>\r\n);\r\n","import React, { Component } from \"react\";\r\nimport Main from \"../template/Main\";\r\nimport axios from \"axios\";\r\nconst headerProps = {\r\n  icon: \"users\",\r\n  title: \"Usuários\",\r\n  subtitle: \"Cadastro de usuários: Incluis, Listar, Alterar e Excluir\",\r\n};\r\n\r\nconst baseUrl = \"http://localhost:3001/users\";\r\nconst initialState = {\r\n  user: { name: \"\", email: \"\" },\r\n  list: [],\r\n};\r\n\r\nexport default class UserCrud extends Component {\r\n  state = { ...initialState };\r\n\r\n  componentWillMount(){\r\n      axios(baseUrl).then(resp =>{\r\n        this.setState({list: resp.data})\r\n      })\r\n  }\r\n\r\n  clear() {\r\n    this.setState({ user: initialState.user });\r\n  }\r\n\r\n  save() {\r\n    const user = this.state.user;\r\n    const method = user.id ? \"put\" : \"post\";\r\n    const url = user.id ? `${baseUrl}/${user.id}` : baseUrl;\r\n    axios[method](url, user).then((resp) => {\r\n      const list = this.getUpdateList(resp.data);\r\n      this.setState({ user: initialState.user, list });\r\n    });\r\n  }\r\n\r\n  getUpdateList(user, add =true) {\r\n    const list = this.state.list.filter((u) => u.id !== user.id);\r\n    if(add) list.unshift(user);\r\n    return list;\r\n  }\r\n\r\n  updateField(event) {\r\n    const user = { ...this.state.user };\r\n    user[event.target.name] = event.target.value;\r\n    this.setState({ user });\r\n  }\r\n\r\n  renderForm() {\r\n    return (\r\n      <div className=\"form\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-md-6\">\r\n            <div className=\"form-group\">\r\n              <label>Nome</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"name\"\r\n                value={this.state.user.name}\r\n                onChange={(e) => this.updateField(e)}\r\n                placeholder=\"Digite o nome ...\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-12 col-md-6\">\r\n            <div className=\"form-group\">\r\n              <label>Email</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"email\"\r\n                value={this.state.user.email}\r\n                onChange={(e) => this.updateField(e)}\r\n                placeholder=\"Digite o Email ...\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <hr />\r\n\r\n        <div className=\"row\">\r\n            <div className=\"col-12 d-flex justify-content-end\">\r\n                <button className=\"btn btn-primary\"\r\n                onClick={e => this.save(e)}>\r\n                    Salvar\r\n                </button>\r\n                <button className=\"btn btn-secondary ml-2\" onClick={e => this.clear(e)}>\r\n                    Cancelar\r\n                </button>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  load(user){\r\n      this.setState({user})\r\n  }\r\n\r\n  remove(user){\r\n      axios.delete(`${baseUrl}/${user.id}`).then(resp => {\r\n          const list = this.getUpdateList(user, false )\r\n          this.setState({ list })\r\n      })\r\n  }\r\n\r\n  renderTable(){\r\n      return(\r\n          <table className=\"table mt-4\">\r\n              <thead>\r\n                  <tr>\r\n                      <th>Nome</th>\r\n                      <th>Email</th>\r\n                      <th>Ações</th>\r\n                  </tr>\r\n              </thead>\r\n              <tbody>\r\n                  {this.renderRow()}\r\n              </tbody>\r\n          </table>\r\n      )\r\n  }\r\n\r\n  renderRow(){\r\n      return this.state.list.map(user => {\r\n          return(\r\n              <tr key={user.id}>\r\n                  <td>{user.name}</td>\r\n                  <td>{user.email}</td>\r\n                  <td>\r\n                      <button className=\"btn btn-warning\" onClick={() => this.load(user)}>\r\n                          <i className=\"fa fa-pencil\" ></i> \r\n                      </button>\r\n                      <button className=\"btn btn-danger ml-2\" onClick={() => this.remove(user)}>\r\n                          <i className=\"fa fa-trash\" ></i> \r\n                      </button>\r\n                  </td>\r\n              </tr>\r\n          )\r\n      })\r\n  }\r\n  render() {\r\n     \r\n    return <Main {...headerProps}>\r\n        {this.renderForm()}\r\n        {this.renderTable()}\r\n        </Main>;\r\n  }\r\n}\r\n","import React from 'react'\r\nimport {Switch, Route, Redirect} from 'react-router'\r\n\r\nimport Home from '../components/home/Home'\r\nimport UserCrud from '../components/user/UserCrud'\r\n\r\nexport default props =>\r\n<Switch>\r\n    <Route exact path=\"/\" component={Home} />\r\n    <Route path=\"/users\" component={UserCrud} />\r\n    <Redirect from='*' to='/' />\r\n\r\n</Switch>","import './Logo.css'\r\nimport logo from '../../assets/imgs/logotipo.png'\r\nimport React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default props => \r\n<aside className=\"logo\">\r\n    <Link to=\"/\" className='logo'>\r\n        <img src={logo} alt=\"logo\" />\r\n    </Link>\r\n</aside>","import './Footer.css'\r\nimport React from 'react'\r\n\r\nexport default props =>\r\n<footer className=\"footer\">\r\n    <span>\r\n        Desenvolvido por Cinthia de Paula\r\n    </span>\r\n</footer>","import './Nav.css'\r\n\r\nimport React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default props =>\r\n<aside className=\"menu-area\">\r\n    <nav className=\"menu\">\r\n        <Link to=\"/\">\r\n            <i className=\"fa fa-home\"></i> Início\r\n        </Link>\r\n\r\n        <Link to=\"/users\">\r\n            <i className=\"fa fa-users\"></i> Usuários\r\n        </Link>\r\n\r\n    </nav>\r\n</aside>","import 'bootstrap/dist/css/bootstrap.min.css'\r\nimport 'font-awesome/css/font-awesome.min.css'\r\nimport './App.css'\r\nimport React from 'react'\r\n\r\nimport {BrowserRouter} from 'react-router-dom'\r\n\r\nimport Routes from './Routes'\r\nimport Logo from '../components/template/Logo'\r\nimport Footer from '../components/template/Footer'\r\nimport Nav from '../components/template/Nav'\r\n\r\n\r\n\r\nexport default props =>\r\n<BrowserRouter>\r\n<div className=\"app\">\r\n    <Logo />\r\n    <Nav />\r\n    <Routes />\r\n    <Footer />\r\n</div>\r\n</BrowserRouter>\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from '../src/main/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}